# プロジェクトリストを取得する
query getProjects {
  projects {
    id
    name
  }
}

# プロジェクトを作成する
mutation createProject($param: CreateProject!) {
  createProject(param: $param) {
    id
    name
  }
}

# マイルストーンを作成する
mutation createMilestone($param: CreateMilestone!) {
  createMilestone(param: $param) {
    ...MilestoneFragment
  }
}

# マイルストーンの名前を変更する
mutation renameMilestone($param: RenameMilestone!) {
  renameMilestone(param: $param) {
    ...MilestoneFragment
  }
}

# マイルストーンを削除する
mutation deleteMilestone($param: DeleteMilestone!) {
  deleteMilestone(param: $param)
}

# マイルストーンのIDを取得する
query getMilestone($param: QueryPage!) {
  milestone(param: $param) {
    id
  }
}

# タスクを作成する
mutation createTask($param: CreateTask!) {
  createTask(param: $param) {
    ...TaskFragment
  }
}

# タスクを作成する
mutation deleteTask($param: DeleteTask!) {
  deleteTask(param: $param)
}

# マイルストーンの一覧を取得する
query getMilestones($param: QueryMilestones!) {
  milestones(param: $param) {
    ...MilestoneFragment
  }
}

# タスクの情報を取得する
query getTasks($param: QueryTasks!, $range: DateRange!) {
  tasks(param: $param) {
    id
    activity(range: $range) {
      taskId
      date_at
      pv
      ac
      ev
      created_at
      updated_at
    }
    fields {
      id
      type
      value
    }
    order {
      id
      order
    }
    summary {
      taskId
      date_lt
      plan_start_date
      plan_end_date
      actual_start_date
      actual_end_date
      pv
      ev
      ac
      sv
      cv
      spi
      cpi
    }
  }
}

# 日別のサマリ情報を取得する
query getDateSummery($param: QueryDateSummary!) {
  dateSummary(param: $param) {
    info {
      totalPv
      beforePeriodPv
      beforePeriodAc
      beforePeriodEv
    }
    dates {
      date
      prv
      erv
      pv
      ev
      sv
      ac
      cv
      spi
      cpi
      dpv
      dev
      dac
      dsv
      dcv
    }
  }
}

mutation updateActivity($param: [UpdateTaskActivity!]!) {
  updateTaskActivity(param: $param) {
    taskId
    date_at
    pv
    ac
    ev
    etc
    created_at
    updated_at
  }
}

mutation updateTaskField($param: [UpdateTaskField!]!) {
  updateTaskField(param: $param) {
    id
    milestoneId
    created_at
    updated_at
    fields {
      id
      type
      value
    }
  }
}

mutation updateTaskOrder($param: UpdateTaskOrder!) {
  updateTaskOrder(param: $param) {
    id
    milestoneId
    order {
      id
      order
    }
  }
}

mutation updateMilestoneField($param: UpdateMilestoneField!) {
  updateMilestoneField(param: $param) {
    ...MilestoneFragment
  }
}

mutation updateMilestoneSummary($param: UpdateMilestoneSummary!) {
  updateMilestoneSummary(param: $param) {
    ...MilestoneFragment
  }
}
